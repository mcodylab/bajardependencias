trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: varcody  # Grupo de variables con credenciales de JFrog

steps:


# 🔹 Descargar dependencias desde Artifactory asegurando versión correcta
- script: |
   

    echo "📌 Configurando autenticación en JFrog Artifactory... EXPORT"
    
    # 📌 1️⃣ Verificar si `requirements.txt` existe
    if [ ! -f "requirements.txt" ]; then
        echo "❌ ERROR: No se encontró el archivo requirements.txt en el repositorio."
        exit 1
    fi
    echo "✅ requirements.txt encontrado."

      # 📌 2️⃣ Validar si las dependencias existen en JFrog antes de instalar
    echo "📌 Validando disponibilidad de dependencias en Artifactory..."
    MISSING_PACKAGES=()

    PKG_URL="https://devopsm.jfrog.io/artifactory/api/pypi/pypi-local/simple/camelcase/"
    if ! curl --silent --fail -u $(JFROG_USERNAME):$(JFROG_PASSWORD) "$PKG_URL" > /dev/null; then
    echo "❌ ERROR: La dependencia no existe en Artifactory: $PKG_URL"
    exit 1  # Falla el pipeline
    else
    echo "✅ Dependencia encontrada en Artifactory: $PKG_URL"
    fi

    


    # 📌 3️⃣ Si hay paquetes faltantes, detener el pipeline
    if [ ${#MISSING_PACKAGES[@]} -gt 0 ]; then
        echo "❌ ERROR: Las siguientes dependencias NO existen en Artifactory:"
        printf '%s\n' "${MISSING_PACKAGES[@]}"
        exit 1
    fi

    pip install --no-cache-dir  --index-url=$(ARTIFACTORY_URL)  -r requirements.txt
  
    echo "📌 Verificando instalación de todas las dependencias..."
    while IFS= read -r package; do
        package_name=$(echo "$package" | cut -d'=' -f1)  # Extraer solo el nombre del paquete
        if pip list | grep -i "^$package_name "; then
            echo "✅ $package_name está instalado"
        else
            echo "❌ $package_name NO está instalado"
        fi
    done < <(grep -Eo '^[^#]+' requirements.txt | awk '{print $1}')
  displayName: 'Descargar e instalar dependencias desde Artifactory con autenticación'
